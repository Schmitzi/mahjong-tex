% \iffalse meta-comment
%
% Copyright (c) 2021 Daniel Schmitz
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
% associated documentation files (the "Software"), to deal in the Software without restriction,
% including without limitation the rights to use, copy, modify, merge, publish, distribute,
% sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
% furnished to do so, subject to the following conditions:
% 
% The above copyright notice and this permission notice shall be included in all copies or substantial
% portions of the Software.
% 
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
% NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
% NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT
% OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
%
% \fi

% \iffalse

%<*driver>
\documentclass[full]{l3doc}
\usepackage{mahjong}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
\DocInput{mahjong.dtx} \end{document}
%</driver>
% \fi

% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}

% \changes{v0.5}{2020/04/07}{First working version, minimal error handling}
% \GetFileInfo{mahjong.sty}
% \DoNotIndex{\#,\$,\%,\&,\@,\\,\{,\},\^,\_,\~,\ }
% \DoNotIndex{\advance,\begingroup,\catcode,\closein}
% \DoNotIndex{\closeout,\day,\def,\edef,\else,\empty,\endgroup}

% \title{The \textsf{mahjong} package\thanks{This document corresponds to \textsf{mahjong}~\fileversion, dated~\filedate}}
%  \author{Daniel Schmitz \\Â \texttt{schmytzi@gmail.com}}
%
% \maketitle
% \begin{documentation}
% \section{Introduction}
% I like mahjong!
% \section{Typesetting Hands}
% \DescribeMacro{mahjong}
% Use |\mahjong| \oarg{height} \marg{hand}
%
% \end{documentation}
% \begin{implementation}
%
%    \begin{macrocode}
%<*pkg>
%<@@=mahjong>
\NeedsTeXFormat{LaTeX2e}[2019/10/01]
\RequirePackage{expl3}
\ProvidesExplPackage{mahjong}{2021/04/04}{0.5}{Typeset Mahjong Hands}
\RequirePackage{xparse}
\RequirePackage{graphicx}
\RequirePackage{stackengine}
%    \end{macrocode}

%    \begin{macrocode}
\msg_new:nnnn {mahjong} {invalid_token}
{Token ~ #1 ~ is ~ not ~ valid ~ in ~ MPSZ ~ notation}
{Valid ~ tokens ~ are ~ digits ~ 0-9, ~ m, ~ p, ~ s, ~ z, ~ x, ~ -, ~ ?, ~ ', ~ and ~ " }
\msg_new:nnnn {mahjong} {unknown_tile}
{I~don't~know~tile~#1.}
{Please~check~the~documentation~for~recognized~tiles.}


% Identifiers for all suits
\cs_new:Npn \c_@@_suits_tl {mpsz}
% Allowed tokens
\cs_new:Npn \c_@@_allowed_tokens_tl {0123456789mpsz-?x'"}

% Variables have to be declared globally
\tl_new:N \l_@@_suit_tl
\tl_new:N \l_@@_tiles_tl
\tl_new:N \l_@@_reversed_tl
\tl_new:N \l_@@_hand_tl
\tl_new:N \l_@@_current_suit_tl
\tl_new:N \l_@@_current_group_tl
\tl_new:N \l_@@_current_char

\dim_new:N \l_@@_mahjong_tile_height
\dim_set:Nn \l_@@_mahjong_tile_height {\baselineskip}

\int_new:N \l_@@_tile_orientation_int
\seq_new:N \l_@@_tile_maps_seq
\str_new:N \l_@@_file_path_str
%    \end{macrocode}

% \begin{macro}[aux]{\@@_make_tile:nn, \@@_make_tile:VV, \@@_make_tile:xV}
%    \begin{macrocode}
\cs_set:Npn \@@_make_tile:nn #1#2 {
    \file_if_exist:nTF {#1} {
        \int_compare:nNnTF {#2} = 1 {
            \stackinset{c}{0pt}{c}{0pt}{
                \includegraphics[
                    angle=90,
                    width=.9\l_@@_mahjong_tile_height]
                {#1}
            }{
                \includegraphics[
                    angle=90,
                    width=\l_@@_mahjong_tile_height]
                {tiles/Front.pdf}
            }
        } {
            \stackinset{c}{0pt}{c}{0pt}{
                \includegraphics[
                    angle=0,
                    height=.9\l_@@_mahjong_tile_height]
                {#1}
            }{
                \includegraphics[
                    angle=0,
                    height=\l_@@_mahjong_tile_height]
                {tiles/Front.pdf}
            }
        }
    } {
        \msg_error:nnx {mahjong} {unknown_tile} {#1}
    }
}

\cs_generate_variant:Nn \@@_make_tile:nn {VV, xV}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\mahjong_typeset_hand:n, \mahjong_typeset_hand:x}
%    \begin{macrocode}
% Parses a full hand
\cs_set:Npn \mahjong_typeset_hand:n #1 {
    \tl_set:Nx \l_@@_hand_tl {\text_lowercase:n {#1}} 
    % MPSZ notation is easier to parse right-to-left, so reverse string
    % There is no string reversal function but we can reverse token lists
    % Token lists and strings are freely convertible between each other
    \tl_set:Nx \l_@@_reversed_tl {\tl_reverse:V \l_@@_hand_tl} 
    \tl_map_variable:NNn \l_@@_reversed_tl \l_@@_current_char {
        % Check if we recognize the current token
        \exp_args:NVV \tl_if_in:nnF \c_@@_allowed_tokens_tl \l_@@_current_char {
            \msg_error:nnx {mahjong} {invalid_token} {\l_@@_current_char}
        }
        \exp_args:NVV \tl_if_in:nnTF \c_@@_suits_tl \l_@@_current_char {
            % If we've found a suit identifier, change the current suit
            \tl_set:NV \l_@@_current_suit_tl \l_@@_current_char
        } {
            \str_case:VnF \l_@@_current_char {
                {'} {
                    \int_set:Nn \l_@@_tile_orientation_int {1}
                }
                {"} {
                    \int_set:Nn \l_@@_tile_orientation_int {2}
                }
            } {
                \prop_clear:N \l_tmpa_prop
                \prop_put:NnV \l_tmpa_prop {suit} \l_@@_current_suit_tl
                \prop_put:NnV \l_tmpa_prop {face} \l_@@_current_char
                \prop_put:NnV \l_tmpa_prop {orientation} \l_@@_tile_orientation_int
                \seq_put_left:NV \l_@@_tile_maps_seq \l_tmpa_prop
                \int_set:Nn \l_@@_tile_orientation_int {0}
            }
        }
    }

    \seq_map_variable:NNn \l_@@_tile_maps_seq \l_tmpa_prop {
        \prop_get:NnN \l_tmpa_prop {face} \l_tmpa_tl
        \prop_get:NnN \l_tmpa_prop {orientation} \l_tmpa_int
        \str_case:VnF \l_tmpa_tl {
            {-} {
                \includegraphics[height=\l_@@_mahjong_tile_height]{tiles/space.pdf}
            } {x} {
                \int_case:nnTF {\l_tmpa_int} {
                    {0} {
                        \int_set:Nn \l_tmpb_int {0}
                    } {1} {
                        \int_set:Nn \l_tmpb_int {90}
                    }
                } {
                    \includegraphics[
                        angle=\int_use:N \l_tmpb_int,
                        height=\l_@@_mahjong_tile_height]
                        {tiles/Back.pdf}
                } {
                    %TODO: Actually stack tiles here
                    \includegraphics[angle=180,height=\l_@@_mahjong_tile_height]{tiles/Back.pdf}
                }
            } {?} {
                \@@_make_tile:nV {tiles/Blank.pdf} \l_tmpa_int
            }
        } {
            \@@_make_tile:xV {tiles/\l_tmpa_tl\prop_item:Nn \l_tmpa_prop {suit}.pdf} \l_tmpa_int
        }
    }
    \seq_clear:N \l_@@_tile_maps_seq
}

% Have TeX automatically expand the argument for us
\cs_generate_variant:Nn \@@_typeset_hand:n {x}
%    \end{macrocode}
% \end{macro}
% 
% \begin{macro}{\mahjong}
% This is the only \LaTeX{} 2$_\epsilon$ in this package.
% It typesets a mahjong hand.
%    \begin{macrocode}
\NewDocumentCommand{\mahjong}{O{\baselineskip} m}{
    \dim_set:Nn \l_@@_mahjong_tile_height {#1}
    \mahjong_typeset_hand:n {#2}
}
%</pkg>
%    \end{macrocode}
% \end{macro}
% 
% \end{implementation}
\endinput
