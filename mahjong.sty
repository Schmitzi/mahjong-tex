\NeedsTeXFormat{LaTeX2e}
\RequirePackage{xparse}
\RequirePackage{expl3}
\RequirePackage{graphicx}
\RequirePackage{stackengine}
\ProvidesExplPackage{mahjong}{2021/04/04}{0.1}{Typeset Mahjong Hands}

\msg_new:nnnn {mahjong} {invalid_token} {Token ~ #1 ~ is ~ not ~ valid ~ in ~ MPSZ ~ notation} {Valid ~ tokens ~ are ~ digits ~ 0-9, ~ m, ~ p, ~ s, ~ z, ~ x, ~ -, ~ ?, ~ ', ~ and ~ " }


% Identifiers for all suits
\cs_new:Npn \c_suits_tl {mpsz}
% Allowed tokens
\cs_new:Npn \c_allowed_tokens_tl {0123456789mpsz-?x'"}

% Variables have to be declared globally
\tl_new:N \l_suit_tl
\tl_new:N \l_tiles_tl
\tl_new:N \l_reversed_tl
\tl_new:N \l_hand_tl
\tl_new:N \l_current_suit_tl
\tl_new:N \l_current_group_tl
\tl_new:N \l_current_char

\dim_new:N \l_mahjong_tile_height
\dim_set:Nn \l_mahjong_tile_height {\baselineskip}

\bool_new:N \l_tile_sideways_bool


% Output token list. Because we parse the hand in reverse, we must reverse the result
\tl_new:N \l_output_tl


\cs_set:Npn \make_tile:nn #1#2 {
    \bool_log:N \l_tile_sideways_bool
    \if_bool:N \l_tile_sideways_bool
        \tl_put_left:Nn \l_output_tl {
            \stackinset{c}{0pt}{c}{0pt}{
                \includegraphics[
                    angle=270,
                    width=.9\l_mahjong_tile_height,
                    origin=br]
                {tiles/#1#2.pdf}
            }{
                \includegraphics[
                    angle=270,
                    width=\l_mahjong_tile_height,
                    origin=br]
                {tiles/Front.pdf}
            }
        }
    \else:
        \tl_put_left:Nn \l_output_tl {
            \stackinset{c}{0pt}{c}{0pt}{
                \includegraphics[
                    angle=0,
                    height=.9\l_mahjong_tile_height]
                {tiles/#1#2.pdf}
            }{
                \includegraphics[
                    angle=0,
                    height=\l_mahjong_tile_height]
                {tiles/Front.pdf}
            }
        }
    \fi
    \bool_set_false:N \l_tile_sideways_bool
}

\cs_generate_variant:Nn \make_tile:nn {VV, nn}

% Parses a group of tiles belonging to the same suit
\cs_set:Npn \parse_group:nn #1#2 {
    \tl_set:Nn \l_suit_tl {#1}
    \tl_set:Nn \l_tiles_tl {#2}
    \tl_map_variable:NNn \l_tiles_tl \l_tmpa_tl {
        \str_case:VnTF \l_tmpa_tl {
            {-} { % If there is a dash, insert a space
                \tl_put_left:Nn \l_output_tl {
                    \includegraphics[height=\l_mahjong_tile_height]{tiles/space.pdf}
                }
            }
            {?} {
                % Missing tile. Displayed as an ordinary tile with a question mark image, file name is Blank.pdf
                \make_tile:nn {Blan} {k}
            } 
            {x} {
                % Concealed tile
                \if_bool:N \l_tile_sideways_bool
                    \tl_put_left:Nn \l_output_tl {
                        \includegraphics[angle=270, width=\l_mahjong_tile_height, origin=br]{tiles/Back.pdf}
                    }
                \else:
                    \tl_put_left:Nn \l_output_tl {
                        \includegraphics[angle=0, height=\l_mahjong_tile_height]{tiles/Back.pdf}
                    }
                \fi
                \bool_set_false:N \l_tile_sideways_bool
            }
            {'} {
                % Apostrophe means next tile is on its side
                \bool_set_true:N \l_tile_sideways_bool
                \bool_log:N \l_tile_sideways_bool
            }
        } {} {
            % Insert tile
            \make_tile:VV {\l_tmpa_tl} {\l_suit_tl}
        }
    }
}

\cs_generate_variant:Nn \parse_group:nn { Vn, nV, VV }

% Parses a full hand
\cs_set:Npn \parse_hand:n #1 {
    \tl_set:Nx \l_hand_tl {\text_lowercase:n {#1}} 
    % MPSZ notation is easier to parse right-to-left, so reverse string
    % There is no string reversal function but we can reverse token lists
    % Token lists and strings are freely convertible between each other
  %  \tl_new:N \l_reversed_tl
    \tl_set:Nx \l_reversed_tl {\tl_reverse:V \l_hand_tl} 
    %\tl_set:Nx \l_tmpa_tl {\tl_reverse:V \l_hand_str}
    %\str_set:Nx \l_reversed_str {\tl_to_str:N \l_tmpa_tl}
    \tl_map_variable:NNn \l_reversed_tl \l_current_char {
        % Check if we recognize the current token
        \exp_args:NVV \tl_if_in:nnF \c_allowed_tokens_tl \l_current_char {
            \msg_error:nnx {mahjong} {invalid_token} {\l_current_char}
        }
        \exp_args:NVV \tl_if_in:nnTF \c_suits_tl \l_current_char {
            % If we've found a suit identifier, typeset the current group
            \parse_group:VV \l_current_suit_tl \l_current_group_tl
            % Start the next group
            \tl_clear:N \l_current_group_tl
            \tl_set:NV \l_current_suit_tl \l_current_char
        } {
            % If the current symbol does not match a suit, assume it's part of the group
            \tl_put_right:NV \l_current_group_tl \l_current_char
        }
    }
    \parse_group:VV \l_current_suit_tl \l_current_group_tl
    \tl_use:N \l_output_tl
    \tl_clear:N \l_output_tl
}

% Have TeX automatically expand the argument for us
\cs_generate_variant:Nn \parse_hand:n {x}

% Macro for LaTeX document
\NewDocumentCommand{\mahjong}{O{\baselineskip} m}{
    \dim_set:Nn \l_mahjong_tile_height {#1}
    \makebox{\parse_hand:n {#2}}
}

\endinput